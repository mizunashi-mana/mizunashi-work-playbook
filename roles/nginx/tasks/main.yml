---
- name: Install nginx site validate
  ansible.builtin.copy:
    src: opt/bin/nginx-site-validate
    dest: /opt/bin/nginx-site-validate
    owner: root
    group: root
    mode: '0755'
    backup: true
  become: true

- name: Install nginx
  ansible.builtin.apt:
    name: 'nginx={{ nginx_version }}*'
    state: present
  become: true

- name: Backup original logrotate config
  ansible.builtin.command:
    cmd: /opt/bin/logrotate-backup nginx
  changed_when: false
  become: true

- name: Install logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/nginx
    dest: /etc/logrotate-available.d/nginx
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Enable logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/nginx
    dest: /etc/logrotate.d/nginx
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Copy mime types
  ansible.builtin.copy:
    src: etc/nginx/mime.types
    dest: /etc/nginx/mime.types
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Copy dhparam
  ansible.builtin.copy:
    src: etc/nginx/dhparam
    dest: /etc/nginx/dhparam
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Directory of nginx cache is available
  ansible.builtin.file:
    path: /var/cache/nginx
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  become: true

- name: Copy gzip config
  ansible.builtin.template:
    src: etc/nginx/conf.d/gzip.conf
    dest: /etc/nginx/conf.d/gzip.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Copy log format config
  ansible.builtin.template:
    src: etc/nginx/conf.d/log_format.conf
    dest: /etc/nginx/conf.d/log_format.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Copy ssl config
  ansible.builtin.template:
    src: etc/nginx/conf.d/ssl.conf
    dest: /etc/nginx/conf.d/ssl.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Copy proxy config
  ansible.builtin.template:
    src: etc/nginx/conf.d/proxy.conf
    dest: /etc/nginx/conf.d/proxy.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Copy limit config
  ansible.builtin.template:
    src: etc/nginx/conf.d/limit.conf
    dest: /etc/nginx/conf.d/limit.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Reload nginx

- name: Copy nginx config
  ansible.builtin.template:
    src: etc/nginx/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: nginx -t -c %s
  become: true
  notify:
    - Reload nginx

- name: Directory of nginx credentials is available
  ansible.builtin.file:
    path: /etc/nginx/cred.d
    state: directory
    owner: www-data
    group: www-data
    mode: '0700'
  become: true

- name: Install stub status site
  ansible.builtin.template:
    src: etc/nginx/sites-available/stub_status.conf
    dest: /etc/nginx/sites-available/stub_status.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/nginx-site-validate %s
  become: true
  notify:
    - Reload nginx

- name: Enable stub status site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/stub_status.conf
    dest: /etc/nginx/sites-enabled/stub_status.conf
    owner: root
    group: root
    state: link
  become: true
  notify:
    - Reload nginx

- name: Remove default server
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: true
  notify:
    - Reload nginx

- name: Notify restart nginx if not started
  ansible.builtin.command: systemctl status nginx
  become: true
  register: nginx_service_status
  changed_when: nginx_service_status.rc != 0
  failed_when: false
  notify:
    - Restart nginx

- name: Find nginx logs
  ansible.builtin.find:
    paths: /var/log/nginx
    file_type: file
    patterns: '*.log'
  become: true
  register: nginx_log_files

- name: Make correct permissions of nginx logs
  ansible.builtin.file:
    path: '{{ item.path }}'
    state: file
    owner: www-data
    group: adm
    mode: '0640'
  become: true
  loop: '{{ nginx_log_files.files }}'
