---
- name: Request nginx started
  ansible.builtin.meta: flush_handlers

- name: Install certificate
  ansible.builtin.include_role:
    name: certbot_install_acme_cert
  vars:
    certbot_install_acme_cert_server: '{{ postfix_cert_acme_challenge_url }}'
    certbot_install_acme_cert_domain: '{{ postfix_hostname }}'
    certbot_install_acme_cert_ca_bundle: '{{ postfix_cert_ca_bundle_path }}'
    certbot_install_acme_cert_on_calendar: '{{ certbot_renew_on_calendar }}'

- name: Install postfix
  ansible.builtin.apt:
    name:
    - 'postfix={{ postfix_version }}*'
    - sasl2-bin
    - libsasl2-modules
    state: present
  become: true

- name: Copy postfix main config
  ansible.builtin.template:
    src: etc/postfix/main.cf
    dest: /etc/postfix/main.cf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart postfix

- name: Copy postfix master config
  ansible.builtin.template:
    src: etc/postfix/master.cf
    dest: /etc/postfix/master.cf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart postfix

- name: Copy sasl config
  ansible.builtin.template:
    src: etc/postfix/sasl/smtpd.conf
    dest: /etc/postfix/sasl/smtpd.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart postfix

- name: Create auth DB
  ansible.builtin.shell:
    cmd: |
      echo '{{ postfix_submission_auth_password }}' | saslpasswd2 -c \
        -f /etc/postfix/sasl/sasldb \
        -u '{{ postfix_hostname }}' -p \
        '{{ postfix_submission_auth_username }}'
    creates: /etc/postfix/sasl/sasldb
  become: true
  no_log: true
  notify:
    - Restart postfix

- name: Auth DB is available
  ansible.builtin.file:
    path: /etc/postfix/sasl/sasldb
    state: file
    owner: postfix
    group: postfix
    mode: '0640'
  become: true

- name: Copy postfix relay password
  ansible.builtin.template:
    src: etc/postfix/sasl/relay_passwd
    dest: /etc/postfix/sasl/relay_passwd
    owner: root
    group: root
    mode: '0600'
    backup: true
  become: true
  notify:
    - Restart postfix

- name: Notify restart postfix if not started
  ansible.builtin.command: systemctl status postfix
  become: true
  register: postfix_service_status
  changed_when: postfix_service_status.rc != 0
  failed_when: false
  notify:
    - Restart postfix
