---
- name: Request minio started
  ansible.builtin.meta: flush_handlers

- name: Set MC host
  set_fact:
    minio_setup_target_endpoint: |
      http://{{ minio_root_user }}:{{ minio_root_password }}@127.0.0.1:{{ minio_server_listen_port }}
  no_log: true

- name: Select users
  ansible.builtin.command:
    cmd: mcli admin user list minio_setup_target
  environment:
    MC_HOST_minio_setup_target: '{{ minio_setup_target_endpoint }}'
  changed_when: false
  register: minio_setup_select_users_result

- name: Extract users
  ansible.builtin.set_fact:
    minio_setup_current_users: |
      {{
        minio_setup_select_users_result.stdout_lines
        | map('regex_replace', '^[^ ]+\s+([^ ]+)\s*$', '\1')
        | list
        }}

- name: Add users
  ansible.builtin.command:
    cmd: |
      mcli admin user add minio_setup_target
        '{{ item }}'
        '{{ minio_setup_user_entries[item].secret_key }}'
  environment:
    MC_HOST_minio_setup_target: '{{ minio_setup_target_endpoint }}'
  when: not item in minio_setup_current_users
  no_log: true
  loop: '{{ minio_setup_user_entries|dict2items|map(attribute="key") }}'

- name: Select buckets
  ansible.builtin.command:
    cmd: mcli find --maxdepth 1 minio_setup_target/
  environment:
    MC_HOST_minio_setup_target: '{{ minio_setup_target_endpoint }}'
  changed_when: false
  register: minio_setup_select_buckets_result

- name: Extract buckets
  ansible.builtin.set_fact:
    minio_setup_current_buckets: |
      {{
        minio_setup_select_buckets_result.stdout_lines
        | map('regex_replace', '^minio_setup_target/(.+)$', '\1')
        | list
        }}

- name: Add buckets
  ansible.builtin.command:
    cmd: |
      mcli mb --with-lock 'minio_setup_target/{{ item }}'
  environment:
    MC_HOST_minio_setup_target: '{{ minio_setup_target_endpoint }}'
  when: not item in minio_setup_current_buckets
  loop: '{{ minio_setup_bucket_entries|dict2items|map(attribute="key") }}'

- name: Check retension policy of buckets
  ansible.builtin.command:
    cmd: |
      mcli retention info --default 'minio_setup_target/{{ item }}'
  environment:
    MC_HOST_minio_setup_target: '{{ minio_setup_target_endpoint }}'
  loop: '{{ minio_setup_bucket_entries|dict2items|map(attribute="key") }}'
  register: minio_setup_bucket_retention_results
