---
- name: Select users
  ansible.builtin.command: |
    /usr/share/elasticsearch/bin/elasticsearch-users list
  changed_when: false
  become: true
  register: elasticsearch_setup_select_users_result

- name: Pickup exists users
  ansible.builtin.set_fact:
    elasticsearch_setup_exists_users: |
      {{
        elasticsearch_setup_select_users_result.stdout_lines
        | map('regex_replace', '^([^:\s]+)\s*:.*$', '\1')
        | list
        }}

- name: Create users
  ansible.builtin.command: |
    /usr/share/elasticsearch/bin/elasticsearch-users useradd
      --password '{{ elasticsearch_setup_users[item].password }}'
      --roles '{{ elasticsearch_setup_users[item].roles|join(",") }}'
      '{{ item }}'
  become: true
  when: not item in elasticsearch_setup_exists_users
  no_log: true
  loop: '{{ elasticsearch_setup_users|dict2items|map(attribute="key") }}'

- name: Select users to check
  ansible.builtin.command: |
    /usr/share/elasticsearch/bin/elasticsearch-users list
  changed_when: false
  become: true

- name: Default ILM policy should be available
  ansible.builtin.uri:
    url: 'http://localhost:{{ elasticsearch_listen_port }}/_ilm/policy/idx_policy_default'
    user: '{{ elasticsearch_setup_auth_user }}'
    password: '{{ elasticsearch_setup_auth_password }}'
    method: PUT
    status_code: 200
    body_format: json
    body: '{{ elasticsearch_setup_default_index_policy|to_json }}'

- name: Default index template should be available
  ansible.builtin.uri:
    url: 'http://localhost:{{ elasticsearch_listen_port }}/_index_template/idx_template_default'
    user: '{{ elasticsearch_setup_auth_user }}'
    password: '{{ elasticsearch_setup_auth_password }}'
    method: PUT
    status_code: 200
    body_format: json
    body: '{{ elasticsearch_setup_default_index_template|to_json }}'
