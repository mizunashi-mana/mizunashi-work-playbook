upstream firefish_front {
  server localhost:{{ firefish_listen_port }} fail_timeout=0;
}

proxy_cache_path
  /var/cache/nginx/firefish_front
  levels=1:2
  keys_zone=cache_firefish_front:16m
  inactive=720m
  max_size=1g
  use_temp_path=off
  ;

server {
  listen {{ nginx_site_firefish_front_listen_port }} ssl http2;
  listen [::]:{{ nginx_site_firefish_front_listen_port }} ssl http2;

  server_name {{ nginx_site_firefish_front_domain }};

  access_log /var/log/nginx/access.firefish_front.log json;

  ssl_stapling_verify on;
  ssl_certificate         /etc/letsencrypt/live/{{ nginx_site_firefish_front_domain }}/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/{{ nginx_site_firefish_front_domain }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ nginx_site_firefish_front_domain }}/chain.pem;

  gzip_comp_level 6;
  client_max_body_size 99m;

  add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains" always;
  add_header X-Frame-Options            "SAMEORIGIN"                          always;
  add_header X-Content-Type-Options     "nosniff"                             always;
  add_header X-XSS-Protection           "1; mode=block"                       always;

  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # For WebSocket
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;

{% if nginx_site_firefish_front_maintenance_mode %}
  location / {
    return 503 "Service Unavailable";
  }
{% else %}
  location / {
    proxy_pass http://firefish_front;

    # Cache settings
    proxy_cache cache_firefish_front;
    proxy_cache_lock on;
    proxy_cache_use_stale updating;
    add_header X-Cache $upstream_cache_status;
  }
{% endif %}
}
