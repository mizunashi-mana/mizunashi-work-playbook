map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

{% for upstream_name, proxy_entry in nginx_site_local_proxy_entries.values() %}
upstream local_proxy_{{ upstream_name }} {
  server 127.0.0.1:{{ proxy_entry.upstream_port }} fail_timeout=0;
}
{% endfor %}

server {
  #listen {{ nginx_site_local_proxies_listen_port }} ssl http2;
  #listen [::]:{{ nginx_site_local_proxies_listen_port }} ssl http2;
  listen {{ nginx_site_local_proxies_listen_port }};

  server_name _;

  #ssl_stapling_verify on;
  #ssl_certificate         /etc/letsencrypt/live/{{ mastodon_local_domain }}/fullchain.pem;
  #ssl_certificate_key     /etc/letsencrypt/live/{{ mastodon_local_domain }}/privkey.pem;
  #ssl_trusted_certificate /etc/letsencrypt/live/{{ mastodon_local_domain }}/chain.pem;

  access_log /var/log/nginx/access.local_proxies.log ltsv-slim-for-single-https-server;

  add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains" always;
  add_header X-Frame-Options            "SAMEORIGIN"                          always;
  add_header X-Content-Type-Options     "nosniff"                             always;
  add_header X-XSS-Protection           "1; mode=block"                       always;

  proxy_buffering on;
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Proxy "";
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;
  proxy_pass_header Server;

{% for upstream_name, proxy_entry in nginx_site_local_proxy_entries.values() %}
  location proxy_entry.path {
    proxy_pass http://local_proxy_{{ upstream_name }};
  }
{% endfor %}
}
