{% for proxy_type, entry in nginx_site_local_proxy_entries.items() %}
upstream local_proxy_{{ proxy_type }} {
  server 127.0.0.1:{{ entry.upstream_port }} fail_timeout=0;
}
{% endfor %}

map $args_local_proxy_upstream $local_proxy_upstream {
  default ''
{% for proxy_type in nginx_site_local_proxy_entries.keys() %}
  '{{ proxy_type }}' 'local_proxy_{{ proxy_type }}'
{% endfor %}
}

server {
  listen {{ nginx_site_local_proxy_listen_port }} ssl http2;
  listen [::]:{{ nginx_site_local_proxy_listen_port }} ssl http2;

  server_name *.{{ nginx_site_local_proxy_common_domain }};

  access_log /var/log/nginx/access.local_proxy.log ltsv;

  ssl_certificate         /etc/pki/private-local/live/local_proxy/fullchain.pem;
  ssl_certificate_key     /etc/pki/private-local/live/local_proxy/privkey.pem;
  ssl_trusted_certificate /etc/pki/private-local/live/local_proxy/chain.pem;

  ssl_verify_client on;
  ssl_client_certificate /etc/pki/private-local/live/local_proxy/client_chain.pem;

  add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains" always;
  add_header X-Frame-Options            "SAMEORIGIN"                          always;
  add_header X-Content-Type-Options     "nosniff"                             always;
  add_header X-XSS-Protection           "1; mode=block"                       always;

  proxy_buffering on;
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Proxy "";
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;

  location / {
    proxy_pass_header Server;

    if ($local_proxy_upstream = '') {
      return 404 "Not found";
    }
    proxy_pass http://$local_proxy_upstream;
  }
}
