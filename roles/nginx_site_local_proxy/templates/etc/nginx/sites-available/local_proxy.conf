{% for proxy_type, entry in nginx_site_local_proxy_entries.items() %}
upstream local_proxy_{{ proxy_type }} {
  server localhost:{{ entry.upstream_port }} fail_timeout=0;
}
{% endfor %}

server {
  listen {{ nginx_site_local_proxy_listen_port }} ssl http2;
  listen [::]:{{ nginx_site_local_proxy_listen_port }} ssl http2;

  server_name {{ network_internal_hostname }};

  access_log /var/log/nginx/access.local_proxy.log json;

  ssl_stapling off;
  ssl_certificate         /etc/letsencrypt/live/{{ network_internal_hostname }}/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/{{ network_internal_hostname }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ network_internal_hostname }}/chain.pem;

  add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains" always;
  add_header X-Frame-Options            "SAMEORIGIN"                          always;
  add_header X-Content-Type-Options     "nosniff"                             always;
  add_header X-XSS-Protection           "1; mode=block"                       always;

  location /monitor/l7check {
    return 200 "OK";
  }

  location / {
    auth_basic "";
    auth_basic_user_file /etc/nginx/cred.d/local_proxy.htpasswd;

    proxy_buffering on;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_pass_header Server;
    proxy_set_header Host "localhost";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Proxy "";
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Authorization "";

    proxy_pass http://local_proxy_$remote_user;
  }
}
