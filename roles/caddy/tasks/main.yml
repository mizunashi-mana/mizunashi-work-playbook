---
- name: Copy caddy gpg key
  ansible.builtin.copy:
    src: usr/share/keyrings/caddy.gpg
    dest: /usr/share/keyrings/caddy.gpg
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true

- name: Install caddy repository
  ansible.builtin.template:
    src: etc/apt/sources.list.d/caddy-stable.list
    dest: /etc/apt/sources.list.d/caddy-stable.list
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  register: caddy_install_repository_result

- name: Install caddy
  ansible.builtin.apt:
    name: 'caddy={{ caddy_version }}*'
    state: present
    update_cache: '{{ caddy_install_repository_result.changed }}'
  become: true

- name: Install libnss3-tools for private CA
  ansible.builtin.apt:
    name: libnss3-tools
    state: present
  become: true

- name: Install logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/caddy
    dest: /etc/logrotate-available.d/caddy
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Enable logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/caddy
    dest: /etc/logrotate.d/caddy
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Directory of caddy is available
  ansible.builtin.file:
    path: /etc/caddy/sites.d
    state: directory
    owner: caddy
    group: caddy
    mode: '0755'
  become: true

- name: Directory of PKI is available
  ansible.builtin.file:
    path: /etc/pki
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

- name: Directory of caddy PKI is available
  ansible.builtin.file:
    path: /etc/pki/caddy
    state: directory
    owner: caddy
    group: caddy
    mode: '0755'
  become: true

- name: Directory of caddy CA is available
  ansible.builtin.file:
    path: /etc/pki/caddy/ca
    state: directory
    owner: caddy
    group: caddy
    mode: '0755'
  become: true

- name: Directory of caddy local CA is available
  ansible.builtin.file:
    path: /etc/pki/caddy/ca/local
    state: directory
    owner: caddy
    group: caddy
    mode: '0755'
  become: true

- name: Install private root CA certificate
  ansible.builtin.copy:
    content: "{{ caddy_pki_ca_local_root_cert }}\n"
    dest: /etc/pki/caddy/ca/local/root.crt
    owner: caddy
    group: caddy
    mode: '0644'
    backup: true
  become: true
  notify:
  - Reload caddy

- name: Install private root CA key
  ansible.builtin.copy:
    content: "{{ caddy_pki_ca_local_root_key }}\n"
    dest: /etc/pki/caddy/ca/local/root.key
    owner: caddy
    group: caddy
    mode: '0600'
    backup: true
  become: true
  no_log: true
  notify:
  - Reload caddy

- name: Copy metrics.Caddyfile
  ansible.builtin.template:
    src: etc/caddy/sites.d/metrics.Caddyfile
    dest: /etc/caddy/sites.d/metrics.Caddyfile
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: caddy validate --adapter caddyfile --config %s
  become: true
  notify:
  - Reload caddy

- name: Copy Caddyfile
  ansible.builtin.template:
    src: etc/caddy/Caddyfile
    dest: /etc/caddy/Caddyfile
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: caddy validate --adapter caddyfile --config %s
  become: true
  notify:
  - Reload caddy

- name: Find caddy logs
  ansible.builtin.find:
    paths: /var/log/caddy
    file_type: file
    use_regex: true
    patterns: '^*.log$'
  become: true
  register: caddy_log_files

- name: Make correct permissions of caddy logs
  ansible.builtin.file:
    path: '{{ item.path }}'
    state: file
    owner: caddy
    group: adm
    mode: '0640'
  loop: '{{ caddy_log_files.files }}'

- name: Notify restart caddy if not started
  ansible.builtin.command: systemctl status caddy
  become: true
  register: caddy_service_status
  changed_when: caddy_service_status.rc != 0
  failed_when: false
  notify:
    - Restart caddy
