---
- name: Select databases
  ansible.builtin.command:
    cmd: |
      sudo --user postgres psql \
        --command 'SELECT datname FROM pg_database;' \
        --csv
  become: true
  changed_when: false
  register: postgresql_mastodon_databases_result

- name: Mastodon DB is available
  ansible.builtin.command:
    cmd: |
      sudo --user postgres psql \
        --command 'CREATE DATABASE "{{ postgresql_mastodon_db_name }}";'
  become: true
  when: |
    postgresql_mastodon_db_name not in postgresql_mastodon_databases_result.stdout_lines

- name: Select users
  ansible.builtin.command:
    cmd: |
      sudo --user postgres psql \
        --command 'SELECT usename FROM pg_shadow;' \
        --csv
  become: true
  changed_when: false
  register: postgresql_mastodon_users_result

- name: Mastodon working user for Mastodon DB is available
  ansible.builtin.command:
    cmd: |
      sudo --user postgres psql \
        --command '\
          CREATE USER "{{ postgresql_mastodon_workuser_name }}" \
          WITH ENCRYPTED PASSWORD md5{{ postgresql_mastodon_workuser_password | md5 }}; \
        '
  become: true
  when: |
    postgresql_mastodon_workuser_name not in postgresql_mastodon_users_result.stdout_lines

- name: Select ACLs
  ansible.builtin.command:
    cmd: |
      sudo --user postgres psql \
        --command '\
          SELECT acl FROM pg_database, UNNEST(datacl) AS acl \
          WHERE datname = "{{ postgresql_mastodon_db_name }}"; \
        ' \
        --csv
  become: true
  changed_when: false
  register: postgresql_mastodon_acls_result

- name: Grant ACL for Mastodon DB
  ansible.builtin.command:
    cmd: |
      sudo --user postgres psql \
        --command '\
          GRANT ALL PRIVILEGES \
          ON DATABASE "{{ postgresql_mastodon_db_name }}" \
          TO "{{ postgresql_mastodon_workuser_name }} \
        '
  become: true
  when: |
    'mastodon=CTc/postgres' not in postgresql_mastodon_acls_result.stdout_lines
