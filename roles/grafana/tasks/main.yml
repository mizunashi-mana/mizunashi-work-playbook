---
- name: Copy grafana gpg key
  ansible.builtin.copy:
    src: usr/share/keyrings/grafana.gpg
    dest: /usr/share/keyrings/grafana.gpg
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true

- name: Install grafana repository
  ansible.builtin.template:
    src: etc/apt/sources.list.d/grafana.list
    dest: /etc/apt/sources.list.d/grafana.list
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  register: grafana_install_repository_result

- name: Install grafana
  ansible.builtin.apt:
    name: 'grafana={{ grafana_version }}*'
    state: present
    update_cache: '{{ grafana_install_repository_result.changed }}'
  become: true
  notify: Restart grafana

- name: Copy grafana config
  ansible.builtin.template:
    src: etc/grafana/grafana.ini
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
    mode: '0640'
    backup: true
  become: true
  notify:
    - Restart grafana

- name: Copy grafana private config
  ansible.builtin.template:
    src: etc/default/grafana-server.private
    dest: /etc/default/grafana-server.private
    owner: root
    group: root
    mode: '0600'
    backup: true
  become: true
  diff: false
  notify:
    - Restart grafana

- name: Copy grafana config
  ansible.builtin.copy:
    src: usr/lib/systemd/system/grafana-server.service
    dest: /usr/lib/systemd/system/grafana-server.service
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart grafana

- name: Notify restart grafana if not started
  ansible.builtin.command: systemctl status grafana-server
  become: true
  register: grafana_service_status
  changed_when: grafana_service_status.rc != 0
  failed_when: false
  notify:
    - Restart grafana
