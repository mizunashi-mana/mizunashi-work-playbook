---
- name: Notify restart systemd-networkd
  ansible.builtin.systemd:
    name: systemd-networkd
    state: restarted
    daemon_reload: true
    enabled: true
  become: true
  listen:
  - Restart systemd-networkd

- name: Notify restart ovsdb-server
  ansible.builtin.systemd:
    name: ovsdb-server
    state: restarted
    daemon_reload: true
    enabled: true
  become: true
  listen:
  - Restart ovsdb-server

- name: Apply netplan
  ansible.builtin.command:
    cmd: netplan apply
  become: true
  listen:
  - Apply netplan

- name: Legacy network interfaces have only on loopback
  ansible.builtin.template:
    src: etc/network/interfaces
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen:
  - Apply netplan

- name: Check public IP
  ansible.builtin.command:
    cmd: |
      ip address show dev {{ network_public_iface }}
  register: network_check_public_ip_stats
  changed_when: false
  failed_when: |
    network_check_public_ip_stats.rc != 0
      or not network_check_public_ip_stats.stdout is search(network_public_ipv4_address)
      or not network_check_public_ip_stats.stdout is search(network_public_ipv6_address)
  listen: Check

- name: Check internal IP
  ansible.builtin.command:
    cmd: |
      ip address show dev {{ network_internal_iface }}
  register: network_check_internal_ip_stats
  changed_when: false
  failed_when: |
    network_check_internal_ip_stats.rc != 0
      or not network_check_internal_ip_stats.stdout is search(network_internal_ipv6_address)
  listen: Check
