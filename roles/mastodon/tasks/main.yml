---
- name: Install dependencies
  ansible.builtin.apt:
    name:
      - git
      - build-essential
      - libidn11-dev
      - libssl-dev
      - libpq-dev
      - libicu-dev
      - zlib1g-dev
      - imagemagick
      - ffmpeg
    state: present
  become: true

- name: Add mastodon user
  ansible.builtin.user:
    name: mastodon
    system: true
    home: /var/lib/mastodon
    shell: /usr/sbin/nologin
    state: present
  become: true

- name: Directory to work Mastodon is available
  ansible.builtin.file:
    path: /var/lib/mastodon
    state: directory
    owner: mastodon
    group: mastodon
    mode: '0755'
  become: true

- name: Get stats of Mastodon source
  ansible.builtin.stat:
    path: /var/lib/mastodon/live
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: mastodon_source_stats
  become: true

- name: The git repository of Mastodon is available
  ansible.builtin.command: |
    sudo -u mastodon git clone https://github.com/mastodon/mastodon.git /var/lib/mastodon/live
  become: true
  when: not mastodon_source_stats.stat.exists

- name: Get git reference of specified ref
  ansible.builtin.command:
    cmd: sudo -u mastodon git rev-parse '{{ mastodon_git_ref }}'
    chdir: /var/lib/mastodon/live
  become: true
  changed_when: false
  register: mastodon_git_ref_rev_result

- name: Get git reference
  ansible.builtin.command:
    cmd: sudo -u mastodon git rev-parse HEAD
    chdir: /var/lib/mastodon/live
  become: true
  changed_when: false
  register: mastodon_git_head_rev_result

- name: Checkout specified ref
  ansible.builtin.command:
    cmd: sudo -u mastodon git checkout '{{ mastodon_git_ref }}'
    chdir: /var/lib/mastodon/live
  become: true
  when: mastodon_git_ref_rev_result.stdout != mastodon_git_head_rev_result.stdout

- name: Directory to work bundler is available
  ansible.builtin.file:
    path: /var/lib/mastodon/live/.bundle
    state: directory
    owner: mastodon
    group: mastodon
    mode: '0755'
  become: true

- name: Copy config of bundler
  ansible.builtin.template:
    src: var/lib/mastodon/live/.bundle/config
    dest: /var/lib/mastodon/live/.bundle/config
    owner: mastodon
    group: mastodon
    mode: '0644'
    backup: true
  become: true

- name: Copy config of application
  ansible.builtin.template:
    src: var/lib/mastodon/live/.env.production
    dest: /var/lib/mastodon/live/.env.production
    owner: mastodon
    group: mastodon
    mode: '0600'
    backup: true
  become: true
  diff: false
  notify:
    - Restart mastodon-sidekiq
    - Restart mastodon-web
    - Restart mastodon-streaming

- name: Install bundle dependencies
  ansible.builtin.command:
    cmd: sudo -u mastodon bundle install
    chdir: /var/lib/mastodon/live
    creates: /var/lib/mastodon/live/vendor/bundle
  become: true

- name: Install yarn dependencies
  ansible.builtin.command:
    cmd: sudo -u mastodon yarn install --pure-lockfile
    chdir: /var/lib/mastodon/live
    creates: /var/lib/mastodon/live/node_modules
  become: true

- name: Precompile assets
  ansible.builtin.command:
    cmd: |
      sudo -u mastodon env
        RAILS_ENV=production
        NODE_OPTIONS=--openssl-legacy-provider
        bundle exec rake assets:precompile
    chdir: /var/lib/mastodon/live
    creates: /var/lib/mastodon/live/public/assets
  become: true

- name: Retrieve DB version
  ansible.builtin.command:
    cmd: |
      sudo -u mastodon env
        RAILS_ENV=production
        bundle exec rake db:version
    chdir: /var/lib/mastodon/live
  failed_when: false
  changed_when: false
  become: true
  register: mastodon_db_version_stat

- name: Setup mastodon DB
  ansible.builtin.command:
    cmd: |
      sudo -u mastodon env
        RAILS_ENV=production
        bundle exec rake db:setup
    chdir: /var/lib/mastodon/live
  become: true
  when: mastodon_db_version_stat.rc != 0

- name: Check mastodon DB version
  ansible.builtin.assert:
    that: |
      'Current version: {{ mastodon_db_version }}' in mastodon_db_version_stat.stdout_lines
  become: true
  when: mastodon_db_version_stat.rc == 0

- name: Directory of logs is available
  ansible.builtin.file:
    path: /var/log/mastodon
    state: directory
    owner: mastodon
    group: adm
    mode: '0755'
  become: true

- name: Copy config of mastodon-sidekiq
  ansible.builtin.template:
    src: etc/default/mastodon-sidekiq
    dest: /etc/default/mastodon-sidekiq
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart mastodon-sidekiq

- name: Copy config of mastodon-web
  ansible.builtin.template:
    src: etc/default/mastodon-web
    dest: /etc/default/mastodon-web
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart mastodon-web

- name: Copy config of mastodon-streaming
  ansible.builtin.template:
    src: etc/default/mastodon-streaming
    dest: /etc/default/mastodon-streaming
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart mastodon-streaming

- name: Install mastodon-sidekiq service
  ansible.builtin.template:
    src: etc/systemd/system/mastodon-sidekiq.service
    dest: /etc/systemd/system/mastodon-sidekiq.service
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/systemd-validate %s
  become: true
  notify:
    - Restart mastodon-sidekiq

- name: Install mastodon-web service
  ansible.builtin.template:
    src: etc/systemd/system/mastodon-web.service
    dest: /etc/systemd/system/mastodon-web.service
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/systemd-validate %s
  become: true
  notify:
    - Restart mastodon-web

- name: Install mastodon-streaming service
  ansible.builtin.template:
    src: etc/systemd/system/mastodon-streaming.service
    dest: /etc/systemd/system/mastodon-streaming.service
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/systemd-validate %s
  become: true
  notify:
    - Restart mastodon-streaming

- name: Install tootctl proxy
  ansible.builtin.copy:
    src: usr/local/bin/tootctl
    dest: /usr/local/bin/tootctl
    owner: mastodon
    group: mastodon
    mode: '0744'
    backup: true
    validate: ruby -c %s
  become: true

- name: Install sidekiq logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/mastodon-sidekiq
    dest: /etc/logrotate-available.d/mastodon-sidekiq
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Install streaming logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/mastodon-streaming
    dest: /etc/logrotate-available.d/mastodon-streaming
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Install web logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/mastodon-web
    dest: /etc/logrotate-available.d/mastodon-web
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Enable sidekiq logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/mastodon-sidekiq
    dest: /etc/logrotate.d/mastodon-sidekiq
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Enable streaming logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/mastodon-streaming
    dest: /etc/logrotate.d/mastodon-streaming
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Enable web logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/mastodon-web
    dest: /etc/logrotate.d/mastodon-web
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Notify restart mastodon-sidekiq if not started
  ansible.builtin.command: systemctl status mastodon-sidekiq
  become: true
  register: mastodon_sidekiq_service_status
  changed_when: mastodon_sidekiq_service_status.rc != 0
  failed_when: false
  notify:
    - Restart mastodon-sidekiq

- name: Notify restart mastodon-streaming if not started
  ansible.builtin.command: systemctl status mastodon-streaming
  become: true
  register: mastodon_streaming_service_status
  changed_when: mastodon_streaming_service_status.rc != 0
  failed_when: false
  notify:
    - Restart mastodon-streaming

- name: Notify restart mastodon-web if not started
  ansible.builtin.command: systemctl status mastodon-web
  become: true
  register: mastodon_web_service_status
  changed_when: mastodon_web_service_status.rc != 0
  failed_when: false
  notify:
    - Restart mastodon-web
