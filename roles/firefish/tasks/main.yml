---
- name: firefish is available
  ansible.builtin.apt:
    name: 'firefish={{ firefish_version }}*'
    state: present
  become: true
  failed_when: false
  register: firefish_installed_check

- name: Install firefish
  ansible.builtin.apt:
    deb: '{{ firefish_deb_url }}'
    state: present
  become: true
  when: |
    'msg' in firefish_installed_check and
      (  firefish_installed_check.msg is search('No package')
      or firefish_installed_check.msg is search('no available')
      )

- name: Copy config of firefish
  ansible.builtin.template:
    src: etc/firefish/config.yml
    dest: /etc/firefish/config.yml
    owner: firefish
    group: firefish
    mode: '0640'
    backup: true
  become: true
  notify:
    - Restart firefish

- name: Directory of logs is available
  ansible.builtin.file:
    path: /var/log/firefish
    state: directory
    owner: firefish
    group: adm
    mode: '0755'
  become: true

- name: Backup original logrotate config
  ansible.builtin.command:
    cmd: /opt/bin/logrotate-backup firefish
  changed_when: false
  become: true

- name: Install logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/firefish
    dest: /etc/logrotate-available.d/firefish
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Enable logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/firefish
    dest: /etc/logrotate.d/firefish
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Notify restart firefish if not started
  ansible.builtin.command: systemctl status firefish
  become: true
  register: firefish_service_status
  changed_when: firefish_service_status.rc != 0
  failed_when: false
  notify:
    - Restart firefish
