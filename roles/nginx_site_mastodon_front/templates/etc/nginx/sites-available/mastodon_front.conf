upstream mastodon_front_web_backend {
  server [::1]:{{ mastodon_web_listen_port }} fail_timeout=0;
}

upstream mastodon_front_streaming {
  server [::1]:{{ mastodon_streaming_listen_port }} fail_timeout=0;
}

proxy_cache_path
  /var/cache/nginx/mastodon_front
  levels=1:2
  keys_zone=cache_mastodon_front:10m
  inactive=7d
  max_size=1g
  ;

server {
  listen {{ nginx_site_mastodon_front_listen_port }} ssl http2;
  listen [::]:{{ nginx_site_mastodon_front_listen_port }} ssl http2;

  server_name {{ mastodon_local_domain }};

  access_log /var/log/nginx/access.mastodon_front.log json;

  root /var/lib/mastodon/live/public;

  ssl_stapling_verify on;
  ssl_certificate         /etc/letsencrypt/live/{{ mastodon_local_domain }}/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/{{ mastodon_local_domain }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ mastodon_local_domain }}/chain.pem;

  gzip_comp_level 6;
  client_max_body_size 99m;

  add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains" always;
  add_header X-Frame-Options            "SAMEORIGIN"                          always;
  add_header X-Content-Type-Options     "nosniff"                             always;
  add_header X-XSS-Protection           "1; mode=block"                       always;

  proxy_buffering on;
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Proxy "";
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;

{% if nginx_site_mastodon_front_maintenance_mode %}
  location / {
    return 503 "Service Unavailable";
  }
{% endif %}
  location / {
    limit_req zone=per_server_usual burst=100 nodelay;

    try_files $uri @proxy;
  }

  location = /sw.js {
    limit_req zone=per_server_usual burst=100 nodelay;

    add_header Cache-Control "public, max-age=604800, must-revalidate";
    try_files $uri =404;
  }

  location ~ ^/(assets|avatars|emoji|headers|packs|shortcuts|sounds)/ {
    limit_req zone=per_server_usual burst=100 nodelay;

    add_header Cache-Control "public, max-age=2419200, must-revalidate";
    add_header X-Content-Type-Options nosniff;
    add_header Content-Security-Policy "default-src 'none'; form-action 'none'";
    try_files $uri =404;
  }

  location ~ ^/system/ {
    limit_req zone=per_server_usual burst=100 nodelay;

    add_header Cache-Control "public, max-age=2419200, immutable";
    add_header X-Content-Type-Options nosniff;
    add_header Content-Security-Policy "default-src 'none'; form-action 'none'";
    try_files $uri =404;
  }

  location ^~ /api/v1/streaming {
    limit_req zone=per_server_usual burst=100 nodelay;

    proxy_pass http://mastodon_front_streaming;
  }

  location @proxy {
    proxy_pass_header Server;

    proxy_pass http://mastodon_front_web_backend;

    proxy_cache cache_mastodon_front;
    proxy_cache_valid 200 7d;
    proxy_cache_valid 410 24h;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    add_header X-Cached $upstream_cache_status;
  }

  error_page 404 500 501 502 503 504 /500.html;
}
