---
- name: Install prometheus
  ansible.builtin.apt:
    name: 'prometheus={{ prometheus_version }}*'
    state: present
  become: true

- name: Copy prometheus config
  ansible.builtin.template:
    src: etc/prometheus/prometheus.yml
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0600'
    backup: true
  become: true
  diff: false
  notify:
    - Restart prometheus

- name: Backup original logrotate config
  ansible.builtin.command:
    cmd: /opt/bin/logrotate-backup prometheus
  changed_when: false
  become: true

- name: Install logrotate config
  ansible.builtin.template:
    src: etc/logrotate-available.d/prometheus
    dest: /etc/logrotate-available.d/prometheus
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/logrotate-validate %s
  become: true

- name: Enable logrotate config
  ansible.builtin.file:
    src: /etc/logrotate-available.d/prometheus
    dest: /etc/logrotate.d/prometheus
    owner: root
    group: root
    state: link
    force: true
  become: true

- name: Copy prometheus environment
  ansible.builtin.template:
    src: etc/default/prometheus
    dest: /etc/default/prometheus
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  notify:
    - Restart prometheus

- name: Install prometheus service
  ansible.builtin.template:
    src: usr/lib/systemd/system/prometheus.service
    dest: /usr/lib/systemd/system/prometheus.service
    owner: root
    group: root
    mode: '0644'
    backup: true
    validate: /opt/bin/systemd-validate %s
  become: true
  notify:
    - Restart prometheus

- name: Notify restart prometheus if not started
  ansible.builtin.command: systemctl status prometheus
  become: true
  register: prometheus_service_status
  changed_when: prometheus_service_status.rc != 0
  failed_when: false
  notify:
    - Restart prometheus
